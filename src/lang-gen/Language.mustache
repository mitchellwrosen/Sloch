{- This file was auto-generated by lang-gen. Do not modify. -}

module Language
    ( Language(..)
    , isLineComment
    , isBeginBlockComment
    , isEndBlockComment
    , language
    ) where

import Control.Applicative ((<*>), pure)
import Data.Char (toLower)
import Data.List (isInfixOf, isPrefixOf)
import System.FilePath.Posix (takeExtension)

data Language = 
   {{langAdt}} 
   deriving (Eq, Ord, Show)

isLineComment :: Language -> String -> Bool
{{lineComments}}

isBeginBlockComment :: Language -> String -> Bool
{{beginBlockComments}}

isEndBlockComment :: Language -> String -> Bool
{{endBlockComments}}

language :: FilePath -> Maybe Language
language = language' . map toLower . takeExtension
  where
    language' :: String -> Maybe Language
{{languageExts}}
    language' _         = Nothing
